<!-- 

This build file is based on an example from https://code.google.com/p/wami/ 
and is made available under the MIT Licence

To rebuild the applet, right-click on this file and
and Run As Ant Build...

Note that if you want a signed applet, you will need to
add properties pointing to the keystore, etc, and change
the target to "sign"
-->
<project name="web-start" default="jar-ruleplayer" basedir=".">


	<property name="src.home" value="${basedir}/src-player" />
	<property name="build.home" value="${basedir}/build-player" />
	<property name="classes.home" value="${build.home}/classes" />

	<!-- Jar and Zip names -->
	<property name="player.jar.name" value="red-player.jar" />
	<property name="player.zip.name" value="red-player.zip" />

	<!-- Destination and other RP (main project) info -->
	<property name="red-player-dest" value="./release/" />
	<property name="red-player-lib" value="../red-piranha/war/ruleplayer/lib" />

	<property name="red-main-scripts" value="../red-piranha/scripts" />
	<property name="red-main-lib" value="../red-piranha/war/WEB-INF/lib" />

	<!-- Compilation options -->
	<property name="compile.debug" value="true" />
	<property name="compile.deprecation" value="false" />
	<property name="compile.optimize" value="true" />

	<!-- Compilation classpath -->
	<path id="compile.classpath">

		<!-- Include the Red-Piranha dependencies when we compile -->
		<fileset dir="${red-main-lib}">
			<include name="**/*.jar" />
		</fileset>

		<!-- Include the Red-Piranha Core when we compile the player-->
		<fileset dir="${red-player-lib}">
			<include name="red-piranha.jar" />
		</fileset>

	</path>

	<!-- Clean target -->
	<target name="clean" description="Delete old build directories">
		<delete file="${red-player-lib}/${player.jar.name}" />
		<delete file="${red-player-dest}/${player.zip.name}" />
		<delete dir="${classes.home}" />
	</target>

	<!-- Ensure we are working against the very latest version of the main Red-Piranha project -->
	<target name="build-red-piranha" depends="clean" description="Make sure we build the main Red Piranha project">
		<echo message="Call main Red_Piranha build file" />
		<ant antfile="../red-piranha/build.xml" dir="../red-piranha/" target="jar" />
		<echo message="Returned to Red Player build file" />
	</target>

	<!-- Preparation -->
	<target name="prepare" depends="build-red-piranha">
		<!-- Create build directories as needed -->
		<mkdir dir="${build.home}" />
		<mkdir dir="${classes.home}" />
	</target>

	<!-- Compile target -->
	<target name="compile" depends="prepare" description="Compile Java sources">
		<!-- Compile Java classes as necessary -->
		<mkdir dir="${classes.home}" />

		<javac srcdir="${src.home}" destdir="${classes.home}" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}" target="1.5">
			<classpath refid="compile.classpath" />
		</javac>

	</target>


	<!-- Jar target -->
	<target name="jar-ruleplayer" depends="compile" description="Make the jar">


		<echo message="Including Drools Dependencies from ${red-main-lib}" />

		<jar jarfile="${red-player-lib}/${player.jar.name}" basedir="${classes.home}">

			<!-- include the required libs -->
			<zipfileset includes="**/*.*" src="${red-player-lib}/red-piranha.jar" />
			<zipfileset includes="**/*.*" src="${red-main-lib}/drools-api-5.1.1.jar" />
			<zipfileset includes="**/*.*" src="${red-main-lib}/drools-core-5.1.1.jar" />
			<zipfileset includes="**/*.*" src="${red-main-lib}/drools-compiler-5.1.1.jar" />
			<zipfileset includes="**/*.*" src="${red-main-lib}/mvel2-2.0.15.jar" />
			<zipfileset includes="**/*.*" src="${red-main-lib}/core-3.4.2.v_883_R34x.jar" />
			<zipfileset includes="**/*.*" src="${red-main-lib}/antlr-runtime-3.1.1.jar" />
			<zipfileset includes="**/*.*" src="${red-main-lib}/commons-codec-1.4.jar" />

			<!-- Google Client Libs -->
			<zipfileset includes="**/*.*" src="${red-main-lib}/gdata-client-1.0.jar" />
			<zipfileset includes="**/*.*" src="${red-main-lib}/gdata-core-1.0.jar" />
			<zipfileset includes="**/*.*" src="${red-main-lib}/gdata-docs-3.0.jar" />
			<zipfileset includes="**/*.*" src="${red-main-lib}/gdata-docs-meta-3.0.jar" />
			<zipfileset includes="**/*.*" src="${red-main-lib}/gdata-media-1.0.jar" />
			<zipfileset includes="**/*.*" src="${red-main-lib}/gdata-spreadsheet-3.0.jar" />
			<zipfileset includes="**/*.*" src="${red-main-lib}/google-collect-1.0-rc1.jar" />


			<!-- Manifest details - allows us to run from the command line -->
			<manifest>
				<attribute name="Main-Class" value="net.firstpartners.player.RulePlayer" />
			</manifest>

		</jar>
	</target>


	<!-- sign target -->
	<target name="sign" depends="jar-ruleplayer" description="Sign the jar">


		<echo message="This task fails, you may wish to run jar-sign.sh or jar-sign.bat instead" />
		<!-- More info on signing Jars using the Java KeyTool (which this Ant task calls)
		http://introcs.cs.princeton.edu/85application/jar/sign.html
		-->
		<!-- Resign this file -->
		<!-- Call script based on which OS you are running -->
		<exec dir="${red-main-scripts}" executable="jar-sign.cmd" osfamily="Windows" />
		<exec dir="${red-main-scripts}" executable="jar-sign.sh" osfamily="Unix" />

	</target>


	<!-- build the webstart into the jnlp package-->
	<target name="package_webstart" depends="sign" description="package into Red-Piranha as a JNLP file" />


	<!-- Just zip it up for future download-->
	<target name="package_zip" description="make a zip available for download">

		<echo message="zipping files (signed or not) already in the download dir" />

		<zip destfile="${red-player-dest}/${player.zip.name}">
			<fileset file="${red-player-lib}/RulePlayer.bat" />
			<fileset file="${red-player-lib}/RulePlayer.sh" />
			<fileset file="${red-player-lib}/RulePlayerLocal.jnlp" />
			<fileset file="${red-player-lib}/${player.jar.name}" />
		</zip>

	</target>

	<!-- Package Webstart, Zip, and exe-->
	<target name="package_all" depends="package_zip,package_webstart" description="build all the deployment options" />


</project>