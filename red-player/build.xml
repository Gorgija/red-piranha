<!-- 

This build file is based on an example from https://code.google.com/p/wami/ 
and is made available under the MIT Licence

To rebuild the applet, right-click on this file and
and Run As Ant Build...

Then be sure to refresh the "lib" folder to get the
changes from the file system.

Note that if you want a signed applet, you will need to
add properties pointing to the keystore, etc, and change
the target to "sign"
-->
<project name="web-start" default="package_zip" basedir=".">


	<property name="src.home" value="${basedir}/src-applet" />
	<property name="build.home" value="${basedir}/build-applet" />
	<property name="classes.home" value="${build.home}/classes" />
	<property name="jar.name" value="red-player.jar" />

	<!-- Destination and other RP (main project) info -->
	<property name="destination" value="../red-piranha/war" />
	<property name="red-player-lib" value="../red-piranha/war/ruleplayer/lib" />
	<property name="red-main" value="../red-piranha" />
	<property name="red-main-lib" value="${red-main}/war/WEB-INF/lib" />
	<property name="drools-repackaged" value="drools-combined.jar" />

	<!-- Compilation options -->
	<property name="compile.debug" value="true" />
	<property name="compile.deprecation" value="false" />
	<property name="compile.optimize" value="true" />

	<!-- Compilation classpath -->
	<path id="compile.classpath">

		<fileset dir="${red-player-lib}">
			<include name="**/*.jar" />
		</fileset>

	</path>

	<!-- Clean target -->
	<target name="clean" description="Delete old build directories">
		<delete file="${red-player-lib}/${jar.name}" />
		<delete dir="${classes.home}" />
	</target>



	<!-- Ensure we are working against the very latest version of the main Red-Piranha project -->
	<target name="build-red-piranha" description="Make sure we build the main Red Piranha project">
		<echo message="Call main Red_Piranha build file" />
		<ant antfile="../red-piranha/build.xml" dir="../red-piranha/" target="jar" />
		<echo message="Returned to Red Player build file" />
	</target>

	<!-- Preparation -->
	<target name="prepare" depends="build-red-piranha">
		<!-- Create build directories as needed -->
		<mkdir dir="${build.home}" />
		<mkdir dir="${classes.home}" />
	</target>
	
	<!-- Compile target -->
	<target name="compile" depends="prepare" description="Compile Java sources">
		<!-- Compile Java classes as necessary -->
		<mkdir dir="${classes.home}" />

		<javac srcdir="${src.home}" destdir="${classes.home}" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}" target="1.5">
			<classpath refid="compile.classpath" />
		</javac>

	</target>


	<!-- Jar target -->
	<target name="jar-ruleplayer" depends="compile" description="Make the jar">
		<jar jarfile="${red-player-lib}/${jar.name}" basedir="${classes.home}">

			<!-- include the required libs -->
			<zipfileset includes="**/*.class" src="${red-player-lib}/red-piranha.jar" />

			<zipfileset includes="**/*.class" src="${red-main-lib}/drools-api-5.1.1.jar" />
			<zipfileset includes="**/*.class" src="${red-main-lib}/drools-core-5.1.1.jar" />
			<zipfileset includes="**/*.class" src="${red-main-lib}/drools-compiler-5.1.1.jar" />
			<zipfileset includes="**/*.class" src="${red-main-lib}/mvel2-2.0.15.jar" />
			<zipfileset includes="**/*.class" src="${red-main-lib}/core-3.4.2.v_883_R34x.jar" />
			<zipfileset includes="**/*.class" src="${red-main-lib}/antlr-runtime-3.1.1.jar" />


			<!-- Manifest details - allows us to run from the command line -->
			<manifest>
				<attribute name="Main-Class" value="net.firstpartners.player.RulePlayer" />
			</manifest>

		</jar>
	</target>


	<!-- sign target -->
	<target name="sign" depends="jar-ruleplayer" description="Sign the jar">


		<echo message="This task fails, you may wish to run jar-sign.sh or jar-sign.bat instead" />
		<!-- More info on signing Jars using the Java KeyTool (which this Ant task calls)
		http://introcs.cs.princeton.edu/85application/jar/sign.html
		-->
		<!-- Resign this file -->
		<!-- Call script based on which OS you are running -->
		<exec dir="${red-main}/scripts" executable="jar-sign.cmd" osfamily="Windows" />
		<exec dir="${red-main}/scripts" executable="jar-sign.sh" osfamily="Unix" />
		
	</target>


	<!-- build the webstart into the jnlp package-->
	<target name="package_webstart" depends="sign" description="package into Red-Piranha as a JNLP file" />

	<!-- package up as an exe -->
	<target name="package_exe" depends="jar-ruleplayer" description="">
	</target>

	<!-- Just zip it up for future download-->
	<target name="package_zip" depends="sign" description="make a zip available for download">
		
		<zip destfile="./rule-player.zip">
		    <fileset file="RulePlayer.bat"/>
			<fileset file="RulePlayer.sh"/>
			<fileset file="${red-player-lib}/${jar.name}"/>
		  </zip>

		
	</target>

	<!-- Package Webstart, Zip, and exe-->
	<target name="package_all" depends="package_zip,package_exe,package_webstart" description="build all the deployment options" />


</project>