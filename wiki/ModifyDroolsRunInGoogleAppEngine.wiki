#sidebar SideBarDeveloper
# Modifications to allow Drools to run in Google App Engine

By default Red Piranha comes with modified Drools libraries needed to run within Google app engine.
If you want a copy the libs can be downloaded from these links, based on Drools 5.1.1 M1
  * [http://red-piranha.googlecode.com/svn/trunk/war/WEB-INF/lib/drools-core-5.1.1.jar Drools Core]
  * [http://red-piranha.googlecode.com/svn/trunk/war/WEB-INF/lib/drools-api-5.1.1.jar Drools Api]


Below lists these modifications if you need to replicate them. 

	* Download Drools Source  http://www.jboss.org/drools/ and extract to folder. 
	* Script expects Drools source to be in paralell folder to Red Piranha (but you can edit)
	** e.g. source/red-piranha and source/drools_5_1_1 
	* Make sure you have Apache Maven installed
	* open command prompt to red-piranha folder
	* Type (no quotes) './build-drools.sh' to start script
	* Instructions are for unix, but easily modified for windoes
	

== Specific Changes Made ==

* Drools Core
{{{
 AbstractRuleBase.java // line 265 surrounded by try / catch 
      this.config = (RuleBaseConfiguration) droolsStream.readObject();
}}}
{{{      
 RuleBaseConfiguration.java // - line 985 surround by try / catch
	 this.classLoader = ClassLoaderUtil.getClassLoader
}}}
{{{	 
 RuleBaseConfiguration.java // line 395  surround by try / catch
     this.chainedProperties = new ChainedProperties( "rulebase.conf",
}}}
{{{     
 RuleBaseConfiguration.java // line 457 surround by try / catch, default Conflict Resolver
	  setConflictResolver( determineConflictResolver( this.chainedProperties.getProperty( "drools.conflictResolver", 
}}}
     
     
* Drools Util

{{{
 ChainedProperties.java // line 98 - exception check around ClassLoader.getSystemClassLoader();
}}}
{{{
 ChainedProperties.java // line 125 - exception check around ClassLoader.getSystemClassLoader();
}}}
{{{
 ChainedProperties.java // line 160 
	- null check for properties /key and return default
}}}
{{{
 ChainedProperties.java // line 240 - surround by try / catch for securityaccessexception
    if ( file != null && file.exists() ) {
}}}
{{{
 ChainedProperties.java // line 270 - surround by try / catch for securityaccessexception
    if ( file != null && file.exists() ) {
}}}
{{{    
 ClassFieldInspector.java // line 166 - 
	 return "/" + clazz.getCanonicalName() + ".class";
}}}
{{{	 
 ClassLoaderUtil.java // line 25 - surround by try / catch for securityaccessexception
     ClassLoader systemClassLoader = 
}}}